lambda: |-
  // Map weather states to MDI characters.
  std::map<std::string, std::string> weather_icon_map
    {
      {"cloudy", "\U000F0590"},
      {"cloudy-alert", "\U000F0F2F"},
      {"cloudy-arrow-right", "\U000F0E6E"},
      {"fog", "\U000F0591"},
      {"hail", "\U000F0592"},
      {"hazy", "\U000F0F30"},
      {"hurricane", "\U000F0898"},
      {"lightning", "\U000F0593"},
      {"lightning-rainy", "\U000F067E"},
      {"night", "\U000F0594"},
      {"clear-night", "\U000F0594"},
      {"night-partly-cloudy", "\U000F0F31"},
      {"partlycloudy", "\U000F0595"},
      {"partly-lightning", "\U000F0F32"},
      {"partly-rainy", "\U000F0F33"},
      {"partly-snowy", "\U000F0F34"},
      {"partly-snowy-rainy", "\U000F0F35"},
      {"pouring", "\U000F0596"},
      {"rainy", "\U000F0597"},
      {"snowy", "\U000F0598"},
      {"snowy-heavy", "\U000F0F36"},
      {"snowy-rainy", "\U000F067F"},
      {"sunny", "\U000F0599"},
      {"sunny-alert", "\U000F0F37"},
      {"sunny-off", "\U000F14E4"},
      {"sunset", "\U000F059A"},
      {"sunset-down", "\U000F059B"},
      {"sunset-up", "\U000F059C"},
      {"tornado", "\U000F0F38"},
      {"windy", "\U000F059D"},
      {"windy-variant", "\U000F059E"},
    };

  std::map<std::string, std::string> various_icons
    {
      {"calendar","\U000F00ED"},
      {"icon-wifi","\U000F05A9"},
      {"vehicle","\U000F010B"},
    };

  it.fill(COLOR_ON);

  std::string fam_lbl = std::string("Family:");
  const auto michael_lbl = std::string("Michael:");
  auto event_1 = std::string(id(${EVENT_0_DESC_ID}).state);
  auto event_2 = std::string(id(${EVENT_1_DESC_ID}).state);
  auto event_3 = std::string(id(${EVENT_2_DESC_ID}).state);
  auto event_4 = std::string(id(${EVENT_3_DESC_ID}).state);

  auto event_1_color = RED;
  auto event_2_color = RED;
  auto event_3_color = RED;
  auto event_4_color = RED;

  if (event_1.find(fam_lbl) != std::string::npos) {
      event_1_color = Color::BLACK;
  }

  if (event_2.find(fam_lbl) != std::string::npos) {
      event_2_color = Color::BLACK;
  }

  if (event_3.find(fam_lbl) != std::string::npos) {
      event_3_color = Color::BLACK;
  }

  if (event_4.find(fam_lbl) != std::string::npos) {
      event_4_color = Color::BLACK;
  }

  // Weather Section
  it.printf(240, 5, id(${G_SANS_BOLD_ID_MED}), Color::BLACK, TextAlign::TOP_CENTER, "%s", id(${CURRENT_TIME_ID}).state.c_str());

  it.printf(255, 56, id(${MDI_FONT_ID_LG}), RED, TextAlign::TOP_LEFT, "%s", weather_icon_map[id(${CURRENT_CONDITIONS_ID}).state.c_str()].c_str());
  it.printf(245, 50, id(${G_SANS_BOLD_ID_XL}), RED, TextAlign::TOP_RIGHT, "%2.0fÂ°", id(${CURRENT_TEMP_ID}).state);

  // Event Section
  it.printf(130, 133, id(${MDI_FONT_ID_LG}), RED, TextAlign::TOP_RIGHT, "%s", various_icons["calendar"].c_str());
  it.printf(260, 125, id(${G_SANS_BOLD_ID_XL}), RED, TextAlign::TOP_CENTER, "%s", "CALENDAR");

  it.printf(110, 190, id(${G_SANS_BOLD_ID_SM_MED}), event_1_color, TextAlign::TOP_LEFT, "%s", id(${EVENT_0_DESC_ID}).state.c_str());
  it.printf(130, 210, id(${G_SANS_REG_ID_SM}), event_1_color, TextAlign::TOP_LEFT, "%s", id(${EVENT_0_TIME_ID}).state.c_str());

  it.printf(110, 235, id(${G_SANS_BOLD_ID_SM_MED}), event_2_color, TextAlign::TOP_LEFT, "%s", id(${EVENT_1_DESC_ID}).state.c_str());
  it.printf(130, 255, id(${G_SANS_REG_ID_SM}), event_2_color, TextAlign::TOP_LEFT, "%s", id(${EVENT_1_TIME_ID}).state.c_str());

  it.printf(110, 280, id(${G_SANS_BOLD_ID_SM_MED}), event_3_color, TextAlign::TOP_LEFT, "%s", id(${EVENT_2_DESC_ID}).state.c_str());
  it.printf(130, 300, id(${G_SANS_REG_ID_SM}), event_3_color, TextAlign::TOP_LEFT, "%s", id(${EVENT_2_TIME_ID}).state.c_str());

  it.printf(110, 325, id(${G_SANS_BOLD_ID_SM_MED}), event_4_color, TextAlign::TOP_LEFT, "%s", id(${EVENT_3_DESC_ID}).state.c_str());
  it.printf(130, 345, id(${G_SANS_REG_ID_SM}), event_4_color, TextAlign::TOP_LEFT, "%s", id(${EVENT_3_TIME_ID}).state.c_str());

  // Commute
  it.printf(135, 400, id(${MDI_FONT_ID_LG}), RED, TextAlign::TOP_RIGHT, "%s", various_icons["vehicle"].c_str());
  it.print(260, 395, id(${G_SANS_BOLD_ID_XL}), RED, TextAlign::TOP_CENTER, "COMMUTE");

  it.print(225, 456, id(${G_SANS_BOLD_ID_MED}), Color::BLACK, TextAlign::TOP_RIGHT, "MONICA");
  it.print(255, 456, id(${G_SANS_BOLD_ID_MED}), Color::BLACK, TextAlign::TOP_LEFT, "MICHAEL");

  it.printf(225, 491, id(${G_SANS_BOLD_ID_MED}), Color::BLACK, TextAlign::TOP_RIGHT, "%s", id(${PERSON_1_LOCATION_ID}).state.c_str());
  it.printf(255, 491, id(${G_SANS_BOLD_ID_MED}), Color::BLACK, TextAlign::TOP_LEFT, "%s", id(${PERSON_2_LOCATION_ID}).state.c_str());      

  it.printf(225, 531, id(${G_SANS_REG_ID_LG}), Color::BLACK, TextAlign::TOP_RIGHT, "%s", id(${PERSON_1_COMMUTE_TIME_ID}).state.c_str());
  it.printf(255, 531, id(${G_SANS_REG_ID_LG}), Color::BLACK, TextAlign::TOP_LEFT, "%s", id(${PERSON_2_COMMUTE_TIME_ID}).state.c_str());

  it.printf(225, 563, id(${G_SANS_REG_ID_MED}), Color::BLACK, TextAlign::TOP_RIGHT, id(${PERSON_1_COMMUTE_TO_ID}).state.c_str());
  it.printf(255, 563, id(${G_SANS_REG_ID_MED}), Color::BLACK, TextAlign::TOP_LEFT, id(${PERSON_2_COMMUTE_TO_ID}).state.c_str());

  it.printf(225, 588, id(${G_SANS_REG_ID_SM}), Color::BLACK, TextAlign::TOP_RIGHT, id(${PERSON_1_COMMUTE_ROUTE_ID}).state.c_str());
  it.printf(255, 588, id(${G_SANS_REG_ID_SM}), Color::BLACK, TextAlign::TOP_LEFT, id(${PERSON_2_COMMUTE_ROUTE_ID}).state.c_str());

  //Boundary Lines
  //it.filled_rectangle(0,330,480,4);	// Weather-Calendar Seperator
  //it.filled_rectangle(320,330,4,240);	//Weather-Wifi QR Seperator
  //it.filled_rectangle(0,570,480,4);	//Calendar-Commute Seperator
  //it.filled_rectangle(245,651,4,149);	//Monica-Michael Commute Seperator
  //it.filled_rectangle(6,50,474,4);	//Time Bottom Seperator
  //it.filled_rectangle(6,0,474,5);		//Top Seperator
  //it.filled_rectangle(0,790,480,800);	//Screen Bottom Seperator
  //it.filled_rectangle(6,0,4,50);		//Time Left Seperator
  //it.filled_rectangle(476,0,4,50);	//Time Right Seperator

  //WiFi QR Code
  it.printf(190, 680, id(${G_SANS_BOLD_ID_MED}), RED, TextAlign::TOP_CENTER, "%s", various_icons["icon-wifi"].c_str());
  it.image(260, 680, id(${WIFI_QR_CODE_ID}));